[
["index.html", "Data Programming 數據編程學 Chapter 1 課前準備", " Data Programming 數據編程學 Karl Ho 何嘉耀 (洪碩庭 翻譯） 2019-05-29 Chapter 1 課前準備 本課程不需要任何寫程式經驗。但是，如果您有一些寫程式經驗（例如SPSS，Stata，HTML），它將會有所幫助。R，Python和JavaScript都是直譯語言。換句話說，程序不需要編譯，可以在開發環境中直接執行。 所有套件和帳戶都是免費的，並由開源提供支持。建議學生攜帶自己的筆記型電腦（不是移動裝置）運行MacOS，Linux或Windows操作系統。 推薦的軟體和編譯器： R（https://cran.r-project.org） RStudio（https://www.rstudio.com） Anaconda 3（https://www.anaconda.com）* 自己選擇的文本編輯器（例如Atom，Sublime Text，Ultraedit） 推薦的網站/帳戶： GitHub（https://github.com） RStudio Cloud （*） - 僅限Python 3.x. "],
["intro.html", "Chapter 2 簡介 2.1 程式設計原則 2.2 資料程式的功能", " Chapter 2 簡介 本章介紹資料程式設計的一般原則。資料程式設計是一種隨資料一起工作和發展的實踐。與點擊式方法不同，程式設計允許用戶以更有效的方式管理資料和處理資料。程式旨在由用戶和協作者進行複制。可以迭代地和遞增地開發和更新資料程式。換句話說，它是建立不重複的步驟達成高效率的成品。它需要調整測試，這是除錯的過程，但事實上，程式工程師自己在未來的工作中可以使用不同的輸入，或者在使用狀況不同的時候，來更新程式不同的情況。 2.1 程式設計原則 社會科學家 Gentzkow and Shapiro (2014) 列出了資料程式設計的一些原則。 自動化 可複制性（不過時，面向未來） 版本控制 允許進化和更新版本 使用Git和GitHub 目錄 按功能組織 索引 索引變數（關係型數據庫） 簡約化 KISS（保持簡短） 紀錄 給後續使用者的註解 管理 準備作共同開發 2.2 資料程式的功能 一個數據程式可以具備或執行以下功能： 1. 紀錄數據內容 2. 導入和導出數據 3. 管理數據 4. 數據視覺化 5. 數據模型 Sample R Programs R 程式範例: R basics 基本程式 # Create variables composed of random numbers x &lt;-rnorm(50) y = rnorm(x) # Plot the points in the plane 平面制圖 plot(x, y) Using R packages R 組件包 # Plot better, using the ggplot2 package ## Prerequisite: install and load the ggplot2 package ## install.packages(&quot;ggplot2&quot;) library(ggplot2) qplot(x,y) More R Data Visualization R 數據視覺化 # Plot better better with ggplot2 ggplot(,aes(x,y)) + theme_bw() + geom_point(col=&quot;blue&quot;) Sample Python Programs Python 程式範例 (## 代表程式輸出) Python using Pandas # Import a text file in csv format import pandas as pd CO2 = pd.read_csv(&quot;https://raw.githubusercontent.com/kho777/data-visualization/master/data/CO2.csv&quot;) # Take a glimpse of the data file CO2.head() ## country CO2 _kt CO2pc CO2percent ## 0 Australia 446,348 18.6 1.23% ## 1 United States 5,172,336 16.1 14.26% ## 2 Saudi Arabia 505,565 16.0 1.39% ## 3 Canada 555,401 15.5 1.53% ## 4 Russia 1,760,895 12.3 4.86% Python using Matplotlib # Using matplotlib to do a simple plot import matplotlib.pyplot as plt CO2pc=CO2[&quot;CO2pc&quot;] plt.plot(CO2pc) 在接下來的章節中，將提供示範程式來說明這些功能。 "],
["r.html", "Chapter 3 R語言程式設計 3.1 什麼是R？ 3.2 為何選擇R？ 3.3 RStudio 3.4 基本操作和賦值 3.5 實例演示 3.6 作業 3.7 R資源推薦：", " Chapter 3 R語言程式設計 3.1 什麼是R？ R統計程式語言是一個免費開源軟件包，以John Chambers開發的S語言作為基礎。 3.1.1 R和S的一些歷史 Robert Gentlemen（加拿大）和Ross Ihaka（紐西蘭）將S進一步發展為R。 Figure 3.1: R Inventors Source: Nick Thieme. 2018. R Generation: 25 years of R 3.1.2 R是： 很大，可能是最大的基於用戶編寫的附加組件/程式 物件導向 互動 支持多種作業系統：Windows，Mac，Linux 根據John Chambers（2009）的解釋，R的六個方面包括： 1. 一個具備多種類運算處理流程的功能介面; 2. 互動，容易上手的; 3. 具備功能性的程式模塊; 4. 物件導向，“一切都是物件”; 5. 模組化，由標準化元件製成; 6. 全世界的開源與協做。 Figure 3.2: Prominent R Developers Source: Nick Thieme. 2018. R Generation: 25 years of R 3.2 為何選擇R？ 程式設計平台環境 允許用戶開發軟體/套件 目前，CRAN軟件包存儲庫包含超過14,000個可用套件（截至2019年5月）。 圖像化！ 可擴展和輕便的 與其他平台/語言的銜接介面（例如C++，Python，JavaScript，Stan，SQL） 比較R與其他軟件？ Figure 3.3: R Compared with other statistical programs/platforms Source: Oscar Torres-Reyna. 2010. Getting Started in R~Stata Notes on Exploring Data 3.3 RStudio RStudio是統計程式設計軟體R的使用者介面。 - 物件導向的環境 - 視窗化的使用者介面 - 點擊操作 - 編碼推薦 - 擴張和發展 - 多功能整合開發環境（IDE） Figure 3.4: RStudio screenshot 3.4 基本操作和賦值 算術運算： +， - ，*，/，^是標準算術運算符。 賦值 要為變數賦值，請使用“&lt; -”或“=”： ## Introduction to R sample program ## file: introR02.R ## Adapted from Venables, W.N., Smith, D.M. and Team, R.C., 2018. An Introduction to R, Version 3.5.1 (2018-07-02) # Clear any existing objects rm(list = ls()) # Generate x, y and w to demontrate linear models and plots. # Make x = (1,2,...,20). x &lt;- 1:20 # Create A ‘weight’ vector of standard deviations. w &lt;- 1 + sqrt(x)/2 # Create a data frame of two columns, x and y. dummy &lt;- data.frame(x=x, y= x + rnorm(x)*w) # Fit a simple linear regression # With y to the left of the tilde then x, meaning y being dependent on x. # Unlike other statistical packages, R does not display all output. It is recommended # to create an object to store the estimates. fm &lt;- lm(y ~ x, data=dummy) # Display the summary of the output of model fm. summary(fm) ## ## Call: ## lm(formula = y ~ x, data = dummy) ## ## Residuals: ## Min 1Q Median 3Q Max ## -8.0030 -1.4241 0.3294 2.2426 3.9404 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 0.7529 1.4460 0.521 0.609 ## x 0.9243 0.1207 7.657 4.55e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 3.113 on 18 degrees of freedom ## Multiple R-squared: 0.7651, Adjusted R-squared: 0.7521 ## F-statistic: 58.63 on 1 and 18 DF, p-value: 4.548e-07 # Use w for a weighted regression. fm1 &lt;- lm(y ~ x, data=dummy, weight=1/w^2) # Display the summary of the output of model fm1. summary(fm1) ## ## Call: ## lm(formula = y ~ x, data = dummy, weights = 1/w^2) ## ## Weighted Residuals: ## Min 1Q Median 3Q Max ## -2.7233 -0.4399 0.1007 0.8977 1.4347 ## ## Coefficients: ## Estimate Std. Error t value Pr(&gt;|t|) ## (Intercept) 1.4208 1.0481 1.356 0.192 ## x 0.8633 0.1069 8.079 2.13e-07 *** ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 ## ## Residual standard error: 1.158 on 18 degrees of freedom ## Multiple R-squared: 0.7838, Adjusted R-squared: 0.7718 ## F-statistic: 65.26 on 1 and 18 DF, p-value: 2.132e-07 # Make the columns in the data frame visible as variables. attach(dummy) # Make a nonparametric local regression function. lrf &lt;- lowess(x, y) # Standard point plot, with plotting character (pch) as bullet. plot(x, y,pch=20) # Add in the local regression. lines(x, lrf$y) # The true regression line: (intercept 0, slope 1, with dotted line type ) abline(0, 1, lty=3) # Unweighted regression line. abline(coef(fm)) # Weighted regression line. abline(coef(fm1), col = &quot;red&quot;) # A standard regression diagnostic plot to check for heteroscedasticity. Can you see it? plot(fitted(fm), pch=20, resid(fm), xlab=&quot;Fitted values&quot;, ylab=&quot;Residuals&quot;, main=&quot;Residuals vs Fitted&quot;) # How about now? abline(0,0, col=&quot;red&quot;) # A normal scores plot to check for skewness, kurtosis and outliers. qqnorm(resid(fm), main=&quot;Residuals Rankit Plot&quot;, pch=17) # Cleaning up rm(list = ls()) 3.5 實例演示 在本節中，我們將使用2016年台灣選舉與民主化研究計劃的數據作實例演示。台灣選舉和民主化研究（TEDS）是2001年開始的最長和最全面的選舉研究之一.TEDS通過不同的調查模式收集數據，包括面對面面談，電話採訪和網絡調查。有關TEDS的更多詳情，請訪問國立政治大學選舉研究中心網站 https://esc.nccu.edu.tw/main.php. 台灣選舉和民主化研究 2016 # Import the TEDS 2016 data in Stata format using the haven package ## install.packages(&quot;haven&quot;) library(haven) TEDS_2016 &lt;- read_stata(&quot;https://github.com/datageneration/home/blob/master/DataProgramming/data/TEDS_2016.dta?raw=true&quot;) # Prepare the analyze the Party ID variable # Assign label to the values (1=KMT, 2=DPP, 3=NP, 4=PFP, 5=TSU, 6=NPP, 7=&quot;NA&quot;) TEDS_2016$PartyID &lt;- factor(TEDS_2016$PartyID, labels=c(&quot;KMT&quot;,&quot;DPP&quot;,&quot;NP&quot;,&quot;PFP&quot;, &quot;TSU&quot;, &quot;NPP&quot;,&quot;NA&quot;)) PartyID (政黨認同變數）: # Check the variable attach(TEDS_2016) head(PartyID) ## [1] NA NA KMT NA NA DPP ## Levels: KMT DPP NP PFP TSU NPP NA tail(PartyID) ## [1] NA NA DPP NA NA NA ## Levels: KMT DPP NP PFP TSU NPP NA 頻率表: # Run a frequency table of the Party ID variable using the descr package ## install.packages(&quot;descr&quot;) library(descr) freq(TEDS_2016$PartyID) ## TEDS_2016$PartyID ## Frequency Percent ## KMT 388 22.9586 ## DPP 591 34.9704 ## NP 3 0.1775 ## PFP 32 1.8935 ## TSU 5 0.2959 ## NPP 43 2.5444 ## NA 628 37.1598 ## Total 1690 100.0000 圖表: # Plot the Party ID variable ggplot(TEDS_2016, aes(PartyID)) + geom_bar() We can attend to more detail of the chart, such as adding labels to x and y axes, and calculating the percentage instead of counts.加入細節 ggplot(TEDS_2016, aes(PartyID)) + geom_bar(aes(y = (..count..)/sum(..count..))) + scale_y_continuous(labels=scales::percent) + ylab(&quot;Party Support (%)&quot;) + xlab(&quot;Taiwan Political Parties&quot;) Adding colors, with another theme 加入顏色，設計: ggplot(TEDS_2016, aes(PartyID)) + geom_bar(aes(y = (..count..)/sum(..count..),fill=PartyID)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;Party Support (%)&quot;) + xlab(&quot;Taiwan Political Parties&quot;) + theme_bw() Hold on, colors are not right!顏色有對嗎？ ggplot(TEDS_2016, aes(PartyID)) + geom_bar(aes(y = (..count..)/sum(..count..),fill=PartyID)) + scale_y_continuous(labels=scales::percent) + ylab(&quot;Party Support (%)&quot;) + xlab(&quot;Taiwan Political Parties&quot;) + theme_bw() + scale_fill_manual(values=c(&quot;steel blue&quot;,&quot;forestgreen&quot;,&quot;khaki1&quot;,&quot;orange&quot;,&quot;goldenrod&quot;,&quot;yellow&quot;,&quot;grey&quot;)) To make the chart more meaningful, we can use a package called tidyverse to manage the data. 更專業的圖表需要用tidyverse程式包 ##install.packages(&quot;tidyverse&quot;) library(tidyverse) TEDS_2016 %&gt;% count(PartyID) %&gt;% mutate(perc = n / nrow(TEDS_2016)) -&gt; T2 ggplot(T2, aes(x = reorder(PartyID, -perc),y = perc,fill=PartyID)) + geom_bar(stat = &quot;identity&quot;) + ylab(&quot;Party Support (%)&quot;) + xlab(&quot;Taiwan Political Parties&quot;) + theme_bw() + scale_fill_manual(values=c(&quot;steel blue&quot;,&quot;forestgreen&quot;,&quot;khaki1&quot;,&quot;orange&quot;,&quot;goldenrod&quot;,&quot;yellow&quot;,&quot;grey&quot;)) 3.6 作業 利用以上的範例程式分析統獨(Tondu)變數 Analyze the Tondu (統獨）variable using the following procedures: Assign label to each category Run a frequency table using descr Plot the variable using ggplot2 Hint:提示： Prepare the analyze the Tondu variable using these labels: (“Unification now”,“Status quo, unif. in future”,“Status quo, decide later”,“Status quo forever”, “Status quo, indep. in future”, “Independence now”,“No response”) Sample codes: TEDS_2016$Tondu&lt;-factor(TEDS_2016$Tondu,labels=c(&quot;Unification now&quot;,&quot;Status quo, unif. in &gt;future&quot;,&quot;Status quo, decide later&quot;,&quot;Status quo forever&quot;, &gt;&quot;Status quo, indep. in future&quot;, &quot;Independence now&quot;,&quot;No &gt;response&quot;)) 3.7 R資源推薦： The R Journal Introduction to R by W. N. Venables, D. M. Smith and the R Core Team Introduction to R Seminar at UCLA Getting Started in Data Analysis using Stata and R by Data and Statistical Services, Princeton University "],
["python.html", "Chapter 4 Python程式設計 4.1 什麼是Python？ 4.2 Python基本程式包： 4.3 Python IDE整合式開發環境 4.4 基本操作和賦值 4.5 作業 4.6 Python資源推薦：", " Chapter 4 Python程式設計 4.1 什麼是Python？ 直譯式，高階計算機語言 由荷蘭程式設計師Guido van Rossum發明 以電視節目Monty Python’s Flying Circus （飛行馬戲團）中的Monty Python 命名 開源程式語言 Figure 4.1: Python Inventor Guido van Rossum 4.1.1 為何選擇Python？ 簡單 科學計算和數據科學特定領域具有大型生態系統 用戶們建構的套件 數據管理 互聯網數據 大數據處理 4.2 Python基本程式包： NumPy - 操縱基於同構數組的數據 Pandas - 操縱建構和標記數據 SciPy - 用於常見的科學計算任務 Matplotlib - 數據視覺化 IPython - 使用Jupyter筆記本交互式執行和共享程式碼 Scikit-Learn - 機器學習 4.3 Python IDE整合式開發環境 整合式開發環境的選擇至關重要！有很多IDE可用於python編程和開發。僅舉幾例： IDLE Pycharm Jupyter Notebook Spyder Rodeo R Studio 4.4 基本操作和賦值 # Python example program 0 # Some basics # Print a one-line message print (&quot;Hello NCHU 中興大學 friends!!&quot;) # Create some variables ## Hello NCHU 中興大學 friends!! x=5 y=3 # Perform some mathematical operations x*y ## 15 x**y ## 125 x%y ## 2 4.4.1 導入套件庫 #Import Python Libraries import numpy as np import scipy as sp import pandas as pd import matplotlib as mpl import seaborn as sns import pandas as pd import matplotlib.pyplot as plt import seaborn as sns 4.4.2 載入資料 # Import a text file in csv format import pandas as pd CO2 = pd.read_csv(&quot;https://raw.githubusercontent.com/kho777/data-visualization/master/data/CO2.csv&quot;) # Take a glimpse of the data file CO2.head() ## country CO2 _kt CO2pc CO2percent ## 0 Australia 446,348 18.6 1.23% ## 1 United States 5,172,336 16.1 14.26% ## 2 Saudi Arabia 505,565 16.0 1.39% ## 3 Canada 555,401 15.5 1.53% ## 4 Russia 1,760,895 12.3 4.86% 4.4.3 簡單的繪圖 # Creating variables xs = [1,3,5,7,9] ys = [x**2 for x in xs] # Simple plot plt.plot(xs, ys) xs = range(-100,100,10) x2 = [x**2 for x in xs] negx2 = [-x**2 for x in xs] # Combined plot plt.plot(xs, x2) plt.plot(xs, negx2) plt.xlabel(&quot;x&quot;) plt.ylabel(&quot;y&quot;) plt.ylim(-2000, 2000) ## (-2000, 2000) plt.axhline(0,color=&quot;red&quot;) # horiz line plt.axvline(0,color=&quot;green&quot;) # vert line plt.show() 4.4.4 資料視覺化 import matplotlib.pyplot as plt x = np.linspace(0, 2, 100) plt.plot(x, x, label=&#39;linear&#39;,color=&quot;pink&quot;) plt.plot(x, x**2, label=&#39;quadratic&#39;) plt.plot(x, x**3, label=&#39;cubic&#39;) plt.xlabel(&#39;x&#39;,fontsize=12,fontweight=&#39;bold&#39;) plt.ylabel(&#39;y&#39;,fontsize=12,fontweight=&#39;bold&#39;) plt.title(&quot;Plotting functions: Linear, quadratic and cubic&quot;, fontsize=16,fontweight=&#39;bold&#39;) 4.5 作業 This exercise is designed to run in class. Students are advised to install Anaconda 3 to own computer. Launch Jupyter Notebook from Anaconda On Applications pulldown menu, choose anaconda3 Run sample programs from class GitHub (https://github.com/datageneration/dataprogramming/) 4.6 Python資源推薦： A Whirlwind Tool of Python: Getting started Datacamp: Online training courses Matplotlib.org: Data visualization "],
["javascript.html", "Chapter 5 JavaScript 5.1 什麼是JavaScript? 5.2 什麼是D3?", " Chapter 5 JavaScript 5.1 什麼是JavaScript? Figure 5.1: JavaScript Inventor Brendan Eich JavaScript與Java無關 由Brendan Eich於1995年創建 最初是作為Web瀏覽器（客戶端）的原型語言開發的。 現在也在伺服器端（Node.js）中使用。 與Java無關，只是為了營銷目的而命名。 C風格的語法，但從功能程式設計中獲得靈感 for，while，continue，break，if / else，switch類似於C. 運算符（+， - ，*，/，％）也類似（除了==，！=，||） 包括map，reduce，forEach等函數操作。 5.1.1 JavaScript數據類型 數據類型 數字：42,3.14159 邏輯值：真，假 字串：“你好”，“台灣” 空值 undefined * - undefined不為null（空值）！ 5.1.2 JavaScript Object Notation (JSON) JavaScript Object Notation 對象表示法 JavaScript作為存儲資料的XML替代方案 範例： [{“Station”:“Alishan”,“Temperature”:14.5,“Precipitation”:812.4,“Humidity”:95,“Pressure”:762.5,“dayrain”:30},….] 5.2 什麼是D3? D3代表數據驅動文檔。-d3.js（D3）是“用於根據數據操作文檔的JavaScript庫”。 D3可以與HTML和CSS（以及其他）結合使用，以視覺化網頁上的數據。 這是一個開放的框架。 它在程式腳本中嵌入或包含數據資料，以在網頁中創建圖像。 “With D3, designers selectively bind input data to arbitrary document elements, applying dynamic transforms to both generate and modify content.” “使用D3，設計人員有選擇地將輸入數據綁定到任意文檔元素，應用動態轉換來生成和修改內容。“ —Bostock, Ogievetsky and Heer, 2011 5.2.1 D3和Web文檔 D3是基於Web的，使用以下組件： HTML（超文本標記語言） CSS（串樣式列表） JavaScript（JS） SVG（可縮放向量圖形），解釋圖形輸出 以上所有內容都可以使用文本編輯器進行編碼。輸出需要帶有JavaScript控制台的瀏覽器 5.2.2 Sample D3 graphics Interactive Ladder Graph 交互式梯形圖 Figure 5.2: D3: Ladder graph Click here to access the online version Interactive Aster Graph Figure 5.3: D3: Aster graph Click here to access the online version Interactive Network Graph "],
["section-12.html", "Chapter 6 總結", " Chapter 6 總結 本文件為“資料程式設計”課程提供了簡要說明和示範程式，涵蓋了數據科學的基本程式設計。本卷中包含的語言主要是R，Python和JavaScript。將有更多的發展來添加材料和樣本程式，以將這些文件構建成一個完整的資料科學程式集。 更多資料及程式範例可從本課程GitHub獲取： https://www.github.com/datageneration/dataprogramming/ "],
["references.html", "References", " References "]
]
